{"ast":null,"code":"import _slicedToArray from\"/home/deepansh/Documents/GitHub/neuralwordsmith.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Helmet,HelmetProvider}from\"react-helmet-async\";import ReactMarkdown from\"react-markdown\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TrafficRoute=function TrafficRoute(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),markdown=_useState2[0],setMarkdown=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];useEffect(function(){fetch(\"/traffic-route-readme.md\").then(function(res){if(!res.ok)throw new Error(\"README not found\");return res.text();}).then(function(text){setMarkdown(text);}).catch(function(err){console.error(\"Markdown fetch error:\",err);setError(true);});},[]);return/*#__PURE__*/_jsxs(HelmetProvider,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Traffic Route Optimizer | Deepansh\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"markdown-body\",style:{position:\"relative\",zIndex:10,background:\"white\",padding:\"2rem\",maxWidth:\"900px\",margin:\"0 auto\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Traffic Route Optimizer\"}),/*#__PURE__*/_jsx(ReactMarkdown,{children:markdown})]})]});};","map":{"version":3,"names":["React","useEffect","useState","Helmet","HelmetProvider","ReactMarkdown","TrafficRoute","markdown","setMarkdown","error","setError","fetch","then","res","ok","Error","text","catch","err","console","position","zIndex","background","padding","maxWidth","margin"],"sources":["/home/deepansh/Documents/GitHub/neuralwordsmith.github.io/src/pages/projects/TrafficRoute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const TrafficRoute = () => {\n    const [markdown, setMarkdown] = useState(\"\");\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetch(\"/traffic-route-readme.md\")\n        .then((res) => {\n            if (!res.ok) throw new Error(\"README not found\");\n            return res.text();\n        })\n        .then((text) => {\n            setMarkdown(text);\n        })\n        .catch((err) => {\n            console.error(\"Markdown fetch error:\", err);\n            setError(true);\n        });\n    }, []);\n\n\n\n\n    return (\n        <HelmetProvider>\n        <Helmet>\n        <title>Traffic Route Optimizer | Deepansh</title>\n        </Helmet>\n\n        <div\n        className=\"markdown-body\"\n        style={{\n            position: \"relative\",\n            zIndex: 10,\n            background: \"white\",\n            padding: \"2rem\",\n            maxWidth: \"900px\",\n            margin: \"0 auto\",\n        }}\n        >\n        <h2>Traffic Route Optimizer</h2>\n\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n        </div>\n\n        </HelmetProvider>\n    );\n\n};\n"],"mappings":"+IAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,cAAc,KAAQ,oBAAoB,CAC3D,MAAOC,cAAa,KAAM,gBAAgB,CAAC,wFAE3C,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CAC9B,cAAgCJ,QAAQ,CAAC,EAAE,CAAC,wCAArCK,QAAQ,eAAEC,WAAW,eAC5B,eAA0BN,QAAQ,CAAC,KAAK,CAAC,yCAAlCO,KAAK,eAAEC,QAAQ,eAEtBT,SAAS,CAAC,UAAM,CACZU,KAAK,CAAC,0BAA0B,CAAC,CAChCC,IAAI,CAAC,SAACC,GAAG,CAAK,CACX,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,KAAM,IAAIC,MAAK,CAAC,kBAAkB,CAAC,CAChD,MAAOF,IAAG,CAACG,IAAI,EAAE,CACrB,CAAC,CAAC,CACDJ,IAAI,CAAC,SAACI,IAAI,CAAK,CACZR,WAAW,CAACQ,IAAI,CAAC,CACrB,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,GAAG,CAAK,CACZC,OAAO,CAACV,KAAK,CAAC,uBAAuB,CAAES,GAAG,CAAC,CAC3CR,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAKN,mBACI,MAAC,cAAc,yBACf,KAAC,MAAM,wBACP,uBAAO,oCAAkC,EAAQ,EACxC,cAET,aACA,SAAS,CAAC,eAAe,CACzB,KAAK,CAAE,CACHU,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,OAAO,CACnBC,OAAO,CAAE,MAAM,CACfC,QAAQ,CAAE,OAAO,CACjBC,MAAM,CAAE,QACZ,CAAE,wBAEF,oBAAI,yBAAuB,EAAK,cAEhC,KAAC,aAAa,WAAElB,QAAQ,EAAiB,GACnC,GAEW,CAGzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}