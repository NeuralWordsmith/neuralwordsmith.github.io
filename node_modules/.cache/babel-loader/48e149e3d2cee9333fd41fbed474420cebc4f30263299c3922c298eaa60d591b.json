{"ast":null,"code":"var _jsxFileName = \"/home/deepansh/Documents/GitHub/neuralwordsmith.github.io/src/pages/projects/TrafficRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrafficRoute = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetch(\"/traffic-route-readme.md\").then(res => {\n      if (!res.ok) throw new Error(\"README not found\");\n      return res.text();\n    }).then(text => {\n      setMarkdown(text);\n    }).catch(err => {\n      console.error(\"Markdown fetch error:\", err);\n      setError(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HelmetProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Traffic Route Optimizer | Deepansh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-body\",\n      style: {\n        position: \"relative\",\n        zIndex: 10,\n        background: \"white\",\n        padding: \"2rem\",\n        maxWidth: \"900px\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Traffic Route Optimizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: markdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TrafficRoute, \"uDw2QCYoD6xWNqY8E0ONN5aThX4=\");\n_c = TrafficRoute;\nvar _c;\n$RefreshReg$(_c, \"TrafficRoute\");","map":{"version":3,"names":["React","useEffect","useState","Helmet","HelmetProvider","ReactMarkdown","jsxDEV","_jsxDEV","TrafficRoute","_s","markdown","setMarkdown","error","setError","fetch","then","res","ok","Error","text","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","position","zIndex","background","padding","maxWidth","margin","_c","$RefreshReg$"],"sources":["/home/deepansh/Documents/GitHub/neuralwordsmith.github.io/src/pages/projects/TrafficRoute.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const TrafficRoute = () => {\n    const [markdown, setMarkdown] = useState(\"\");\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetch(\"/traffic-route-readme.md\")\n        .then((res) => {\n            if (!res.ok) throw new Error(\"README not found\");\n            return res.text();\n        })\n        .then((text) => {\n            setMarkdown(text);\n        })\n        .catch((err) => {\n            console.error(\"Markdown fetch error:\", err);\n            setError(true);\n        });\n    }, []);\n\n\n\n\n    return (\n        <HelmetProvider>\n        <Helmet>\n        <title>Traffic Route Optimizer | Deepansh</title>\n        </Helmet>\n\n        <div\n        className=\"markdown-body\"\n        style={{\n            position: \"relative\",\n            zIndex: 10,\n            background: \"white\",\n            padding: \"2rem\",\n            maxWidth: \"900px\",\n            margin: \"0 auto\",\n        }}\n        >\n        <h2>Traffic Route Optimizer</h2>\n\n        <ReactMarkdown>{markdown}</ReactMarkdown>\n        </div>\n\n        </HelmetProvider>\n    );\n\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,cAAc,QAAQ,oBAAoB;AAC3D,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACZa,KAAK,CAAC,0BAA0B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAK;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MAChD,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAAEI,IAAI,IAAK;MACZR,WAAW,CAACQ,IAAI,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACV,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;MAC3CR,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAKN,oBACIN,OAAA,CAACH,cAAc;IAAAmB,QAAA,gBACfhB,OAAA,CAACJ,MAAM;MAAAoB,QAAA,eACPhB,OAAA;QAAAgB,QAAA,EAAO;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAETpB,OAAA;MACAqB,SAAS,EAAC,eAAe;MACzBC,KAAK,EAAE;QACHC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,OAAO;QACnBC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE;MACZ,CAAE;MAAAZ,QAAA,gBAEFhB,OAAA;QAAAgB,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhCpB,OAAA,CAACF,aAAa;QAAAkB,QAAA,EAAEb;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEU,CAAC;AAGzB,CAAC;AAAClB,EAAA,CA/CWD,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}