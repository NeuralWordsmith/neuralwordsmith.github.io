{"ast":null,"code":"import\"./style.css\";import{Helmet,HelmetProvider}from\"react-helmet-async\";import{introdata,meta}from\"../../content_option\";import{Link}from\"react-router-dom\";import{Portfolio}from\"../portfolio\";import{Projects}from\"../projects\";import React from\"react\";import Typewriter from\"typewriter-effect\";import bunnyIcon from'../../assets/images/icon.jpg';import profileImage from'../../assets/images/deepansh_profile.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Home=function Home(){return/*#__PURE__*/_jsxs(HelmetProvider,{children:[/*#__PURE__*/_jsxs(\"section\",{id:\"home\",className:\"home\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"meta\",{charSet:\"utf-8\"}),/*#__PURE__*/_jsxs(\"title\",{children:[\" \",meta.title]}),/*#__PURE__*/_jsx(\"meta\",{name:\"description\",content:meta.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"intro_sec d-block d-lg-flex align-items-center \",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text order-2 order-lg-1 h-100 d-lg-flex justify-content-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"align-self-center \",children:[/*#__PURE__*/_jsx(\"br\",{}),\"                \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"intro mx-auto\",children:[/*#__PURE__*/_jsx(\"img\",{width:\"900px\",alt:\"\",src:profileImage}),/*#__PURE__*/_jsx(\"h2\",{className:\"mb-1x\",children:introdata.title}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"deepansh_gulati@icloud.com\",children:\"deepansh_gulati@icloud.com\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-1x\",children:[\" Hello! :) I'm Deepansh,   I work where tokens meet tensors. My focus lies in bridging human intent with machine understanding \\u2014 through models that not only parse, but truly contextualize. I spend most of my time optimizing pipelines, fine-tuning transformers, and exploring the edges of generalization. My current interest lies in aligning large language models to nuanced real-world tasks \\u2014 from zero-shot classification to embedding-based retrieval systems. \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"I write code like I design systems: modular, reproducible, and always with observability in mind. If it's not traceable or testable, it's not real. Whether it\\u2019s multi-head attention or infrastructure bottlenecks, I enjoy solving problems where abstraction meets execution.\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"intro_btn-action pb-5\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://docs.google.com/document/d/1XbmaukMM6R9yc1CCFBwmVd3LpPyG0Kb0awab1N_Kv0k/edit?usp=sharing\",children:/*#__PURE__*/_jsxs(\"div\",{id:\"button_h\",className:\"ac_btn btn\",children:[\"Resume\",/*#__PURE__*/_jsx(\"div\",{className:\"ring one\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ring two\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ring three\"})]})})})]}),/*#__PURE__*/_jsx(\"p\",{class:\"down\",children:\" \\u2193 Research & Projects  \\u2193\"})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"blob\",children:/*#__PURE__*/_jsx(\"svg\",{xlink:\"http://www.w3.org/1999/xlink\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 310 350\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M156.4,339.5c31.8-2.5,59.4-26.8,80.2-48.5c28.3-29.5,40.5-47,56.1-85.1c14-34.3,20.7-75.6,2.3-111  c-18.1-34.8-55.7-58-90.4-72.3c-11.7-4.8-24.1-8.8-36.8-11.5l-0.9-0.9l-0.6,0.6c-27.7-5.8-56.6-6-82.4,3c-38.8,13.6-64,48.8-66.8,90.3c-3,43.9,17.8,88.3,33.7,128.8c5.3,13.5,10.4,27.1,14.9,40.9C77.5,309.9,111,343,156.4,339.5z\"})})})]})]}),/*#__PURE__*/_jsx(Portfolio,{}),/*#__PURE__*/_jsx(Projects,{})]});};","map":{"version":3,"names":["Helmet","HelmetProvider","introdata","meta","Link","Portfolio","Projects","React","Typewriter","bunnyIcon","profileImage","Home","title","description"],"sources":["/home/deepansh/Documents/GitHub/neuralwordsmith.github.io/src/pages/home/index.js"],"sourcesContent":["import \"./style.css\";\n\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { introdata, meta } from \"../../content_option\";\n\nimport { Link } from \"react-router-dom\";\nimport { Portfolio } from \"../portfolio\";\nimport { Projects } from \"../projects\";\nimport React from \"react\";\nimport Typewriter from \"typewriter-effect\";\nimport bunnyIcon from '../../assets/images/icon.jpg';\nimport profileImage from '../../assets/images/deepansh_profile.jpg';\n\nexport const Home = () => {\n  return (\n    <HelmetProvider>\n      <section id=\"home\" className=\"home\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title> {meta.title}</title>\n          <meta name=\"description\" content={meta.description} />\n        </Helmet>\n        <div className=\"intro_sec d-block d-lg-flex align-items-center \">\n          <div className=\"text order-2 order-lg-1 h-100 d-lg-flex justify-content-center\">\n            <div className=\"align-self-center \">\n            <br/>                <br/>\n              <div className=\"intro mx-auto\">\n               <img width=\"900px\" alt=\"\" src={profileImage} />\n                <h2 className=\"mb-1x\">{introdata.title}</h2>\n                <p><a href=\"deepansh_gulati@icloud.com\">deepansh_gulati@icloud.com</a></p>\n\n                {/* \n                Commenting out typewriter effect\n                <h6 className=\"fluidz-48 mb-1x\">\n                  <Typewriter\n                    options={{\n                      strings: [\n                        introdata.animated.first,\n                        introdata.animated.second,\n                        introdata.animated.third,\n                      ],\n                      autoStart: true,\n                      loop: true,\n                      deleteSpeed: 10,\n                    }}\n                  />\n                </h6> \n                */}\n\n              \n\n                <br/>\n                <p className=\"mb-1x\"> Hello! :) I'm Deepansh,   I work where tokens meet tensors. My focus lies in bridging human intent with machine understanding — through models that not only parse, but truly contextualize. I spend most of my time optimizing pipelines, fine-tuning transformers, and exploring the edges of generalization. My current interest lies in aligning large language models to nuanced real-world tasks — from zero-shot classification to embedding-based retrieval systems. <br /><br />\n\n                I write code like I design systems: modular, reproducible, and always with observability in mind. If it's not traceable or testable, it's not real. Whether it’s multi-head attention or infrastructure bottlenecks, I enjoy solving problems where abstraction meets execution.\n                </p>\n                <div className=\"intro_btn-action pb-5\">\n                  <a href=\"https://docs.google.com/document/d/1XbmaukMM6R9yc1CCFBwmVd3LpPyG0Kb0awab1N_Kv0k/edit?usp=sharing\">                  \n                    <div id=\"button_h\" className=\"ac_btn btn\">\n                      Resume\n                      <div className=\"ring one\"></div>\n                      <div className=\"ring two\"></div>\n                      <div className=\"ring three\"></div>\n                    </div>\n                    </a>\n         \n                </div>\n              </div><p class=\"down\"> ↓ Research & Projects  ↓</p>\n            </div>\n          </div>\n\n     \n          <div class=\"blob\">\n\n          <svg xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 310 350\">\n          <path d=\"M156.4,339.5c31.8-2.5,59.4-26.8,80.2-48.5c28.3-29.5,40.5-47,56.1-85.1c14-34.3,20.7-75.6,2.3-111  c-18.1-34.8-55.7-58-90.4-72.3c-11.7-4.8-24.1-8.8-36.8-11.5l-0.9-0.9l-0.6,0.6c-27.7-5.8-56.6-6-82.4,3c-38.8,13.6-64,48.8-66.8,90.3c-3,43.9,17.8,88.3,33.7,128.8c5.3,13.5,10.4,27.1,14.9,40.9C77.5,309.9,111,343,156.4,339.5z\"/>\n          </svg>\n        </div>\n        </div>\n      </section>\n      <Portfolio/>\n      <Projects/>\n    </HelmetProvider>\n  );\n\n};\n"],"mappings":"AAAA,MAAO,aAAa,CAEpB,OAASA,MAAM,CAAEC,cAAc,KAAQ,oBAAoB,CAC3D,OAASC,SAAS,CAAEC,IAAI,KAAQ,sBAAsB,CAEtD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,SAAS,KAAQ,cAAc,CACxC,OAASC,QAAQ,KAAQ,aAAa,CACtC,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAOC,WAAU,KAAM,mBAAmB,CAC1C,MAAOC,UAAS,KAAM,8BAA8B,CACpD,MAAOC,aAAY,KAAM,0CAA0C,CAAC,wFAEpE,MAAO,IAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACxB,mBACE,MAAC,cAAc,yBACb,iBAAS,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,wBACjC,MAAC,MAAM,yBACL,aAAM,OAAO,CAAC,OAAO,EAAG,cACxB,yBAAO,GAAC,CAACR,IAAI,CAACS,KAAK,GAAS,cAC5B,aAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAET,IAAI,CAACU,WAAY,EAAG,GAC/C,cACT,aAAK,SAAS,CAAC,iDAAiD,wBAC9D,YAAK,SAAS,CAAC,gEAAgE,uBAC7E,aAAK,SAAS,CAAC,oBAAoB,wBACnC,aAAK,mBAAgB,2BAAK,cACxB,aAAK,SAAS,CAAC,eAAe,wBAC7B,YAAK,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAEH,YAAa,EAAG,cAC9C,WAAI,SAAS,CAAC,OAAO,UAAER,SAAS,CAACU,KAAK,EAAM,cAC5C,gCAAG,UAAG,IAAI,CAAC,4BAA4B,UAAC,4BAA0B,EAAI,EAAI,cAsB1E,aAAK,cACL,WAAG,SAAS,CAAC,OAAO,WAAC,0dAA8c,2BAAM,2BAAM,wRAG/e,GAAI,cACJ,YAAK,SAAS,CAAC,uBAAuB,uBACpC,UAAG,IAAI,CAAC,kGAAkG,uBACxG,aAAK,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,WAAC,QAExC,0BAAK,SAAS,CAAC,UAAU,EAAO,cAChC,YAAK,SAAS,CAAC,UAAU,EAAO,cAChC,YAAK,SAAS,CAAC,YAAY,EAAO,GAC9B,EACF,EAEF,GACF,wBAAG,KAAK,CAAC,MAAM,UAAC,qCAAyB,EAAI,GAC/C,EACF,cAGN,YAAK,KAAK,CAAC,MAAM,uBAEjB,YAAK,KAAK,CAAC,8BAA8B,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,4BAA4B,CAAC,OAAO,CAAC,aAAa,uBAChH,aAAM,CAAC,CAAC,8TAA8T,EAAE,EAClU,EACF,GACA,GACE,cACV,KAAC,SAAS,IAAE,cACZ,KAAC,QAAQ,IAAE,GACI,CAGrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}